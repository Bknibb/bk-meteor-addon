name: Publish Build
on: push

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.extract_version.outputs.is_release }}
      version: ${{ steps.extract_version.outputs.version }}
      description: ${{ steps.extract_version.outputs.description }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Determine if commit is a release
        id: extract_version
        run: |
          msg="${{ github.event.head_commit.message }}"

          # Extract version
          if [[ "$msg" =~ release[[:space:]]v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            version="v${BASH_REMATCH[1]}"
            echo "is_release=true" >> $GITHUB_OUTPUT
            echo "version=$version" >> $GITHUB_OUTPUT
          else
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

          # Always output description
          echo "description=$(echo "$msg" | tail -n +2 | tr '\n' ' ' | sed 's/ *$//')" >> $GITHUB_OUTPUT
      - name: Validate version in gradle.properties
        if: steps.extract_version.outputs.is_release == 'true'
        run: |
          expected_version="${{ steps.extract_version.outputs.version }}" # e.g., v1.0.0
          mod_version="v$(grep '^mod_version=' gradle.properties | cut -d'=' -f2 | tr -d '[:space:]')"

          echo "Expected version from commit: $expected_version"
          echo "Version in gradle.properties: $mod_version"

          if [ "$expected_version" != "$mod_version" ]; then
            echo "❌ Version mismatch!"
            echo "Expected: $expected_version"
            echo "Found in gradle.properties: $mod_version"
            exit 1
          else
            echo "✅ Version matches."
          fi
  build:
    runs-on: ubuntu-latest
    needs: detect

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
            persist-credentials: false

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Build with Gradle
        run: ./gradlew build

#      - name: Release dev
#        if: needs.detect.outputs.is_release == 'false'
#        uses: marvinpinto/action-automatic-releases@latest
#        with:
#          repo_token: '${{ secrets.GITHUB_TOKEN }}'
#          automatic_release_tag: snapshot
#          prerelease: true
#          title: Dev Build
#          files: |
#            ./build/libs/*.jar
      - name: Release
        if: needs.detect.outputs.is_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          tag_name: ${{ needs.detect.outputs.version }}
          prerelease: false
          name: Release ${{ needs.detect.outputs.version }}
          body: ${{ needs.detect.outputs.description }}
          files: |
            ./build/libs/*.jar
